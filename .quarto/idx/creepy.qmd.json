{"title":"Perceptions of Creepiness","markdown":{"yaml":{"title":"Perceptions of Creepiness","author":"Terri Payne, Joe DeVita & David Brocker","format":{"html":{"code-fold":true,"code-link":true,"code-tools":true,"toc":true,"toc-depth":3,"toc-location":"left"}},"editor":"visual","theme":{"light":"flatly","dark":"darkly"},"lightbox":true},"headingText":"Hypotheses","containsRefs":false,"markdown":"\n\n\n# Stimuli\n\n## Data Processing\n\n```{r}\n#| message: false\n#| warning: false\n# Load in packages\nlibrary(haven) # Import SPSS\nlibrary(dplyr) # Wrangling Data\nlibrary(tibble) # Nicer Printing\nlibrary(tidyr)  #  Manipulate Data\nlibrary(ggplot2) # Plotting Data\nlibrary(purrr) # Dealing with lists\nlibrary(labelled) #  For dealing with labels\nlibrary(forcats) # for handling categories\nlibrary(huxtable)  # For making nice tables\nlibrary(afex) # for nice ANOVAS\nlibrary(broom) # Cleaning up stats\nlibrary(stringr) # Text Manipulation\nlibrary(janitor) # Cleaning up names\nlibrary(tidytext) # Word Count\nlibrary(patchwork) # Combining Graphs\nlibrary(readxl) # Read in excel\nlibrary(ggtext) # Add text elements to plots\nsuppressPackageStartupMessages(library(googleVis))\n\n# Custom Functions \ndiscrete_tab <- function(data,x){\n  name <- \n    data |> \n    select({{x}}) |> \n    pull()\n\n  tab <- \n    name |> \n    tabyl() |> \n    select(-(starts_with(\"val\"))) |> \n    # Ignore Error for Now,,,\n    adorn_pct_formatting(,,,percent) |> \n    rename_with(str_to_sentence) |> \n    hux() |> \n    theme_article() |> \n    set_align(everywhere,everywhere,\".\")\n  \n  tab[1,] <- c(str_to_sentence(x),\"\",\"\")\n  \n  tab\n}\n\n\nclean_up <- function(string) {\n  string <- str_trim(string)\n  string <- str_remove_all(string, \"[[:punct:]]\")\n}\n\n\n# Read Data\ncr <- read_spss(\"Perceptions+of+Creepiness_February+19%2C+2024_16.43.sav\")\n\n# Clean Data\ncr_cln <- \n  cr |> \n  # Only look at complete cases\n  filter(Finished == 1) |> \n  # Only use 18+ cases\n  filter(Age > 1) |> \n  # Remove uneeded columns \n  select(!StartDate:RecordedDate) |> \n  select(!DistributionChannel:UserLanguage) |> \n  select(!id:Ethnicity_Race_6_TEXT___Topics) |> \n  rename(\n    Creepy_Occ_8 = Occ_8)\n```\n\n### Demographics\n\n```{r}\n# Subset Demographic data\ndemo <- \n  cr_cln |> \n  select(Gender,Religion,Ethnicity_Race,Age) |> \n  mutate(\n    # Get Labels of Demographic variables\n    Gender = sjlabelled::get_labels(cr_cln$Gender)[cr_cln$Gender],\n    Religion = sjlabelled::get_labels(cr_cln$Religion)[cr_cln$Religion],\n    Ethnicity_Race = sjlabelled::get_labels(cr_cln$Ethnicity_Race)[cr_cln$Ethnicity_Race],\n    Age = sjlabelled::get_labels(cr_cln$Age)[cr_cln$Age])\n\n# Apply Custom Function\ngen <- discrete_tab(demo,\"Gender\")\n\neth <- discrete_tab(demo,\"Ethnicity_Race\")\n\nrel <- discrete_tab(demo,\"Religion\")\n\nage <- discrete_tab(demo,\"Age\")\n\ngen |> \n  add_rows(eth) |> \n  add_rows(rel) |> \n  add_rows(age) |> \n  # Add Header Row\n  insert_row(\"Variable\",\"N\",\"Percent\") |> \n  set_top_border(row = 1:3,1:3) |> \n  set_align(col = 1, value = \"left\") |>  \n  set_align(1,1,\"center\") |> \n  set_bottom_border(row = nrow(all), col = ncol(all), value = .4) \n```\n\n### Creepy Occupations\n\nParticipants were asked to rate 21 occupations on a scale from 1 (*Not Creepy at all*) to 5 (*Very Creepy*)\n\n```{r}\n# Get Occupation Labels\nocc_lab <- \n  cr_cln |> \n  select(contains(\"Occ\")) \n\nocc_val <- map_df(occ_lab,get_label_attribute)\n\n# Isolated Occupations\nocc <- \n  occ_val |> \n  pivot_longer(cols=Creepy_Occ_2:Creepy_Occ_22,\n               names_to = \"occ\") |> \n  select(value)\n\n# Occupation Analysis\nocc <- \n  cr_cln |> \n  rename_at(vars(contains(\"occ\")), ~ occ$value) |>\n  pivot_longer(cols = Clown:Meterologist,\n               names_to = \"jobs\",\n               values_to = \"score\") |> \n  mutate(jobs = as.factor(jobs),\n         color = ifelse(jobs %in% c(\"Funeral Director\",\n                                    \"Sex Shop Owner\",\n                                    \"Taxidermist\",\n                                    \"Clown\"),\"maroon\",\"grey\")) \n\n# Visualize\nocc |> \n  ggplot(aes(score,fct_inorder(jobs))) +\n  stat_summary(\n    fun = \"mean\",\n    geom = \"bar\",\n    aes(fill = color)\n  ) +\n  stat_summary(\n    fun.data = \"mean_se\",\n    geom = \"errorbar\"\n  ) +\n  theme_minimal() +\n  labs(\n    x = \"\\n\",\n    y = \"\\n\",\n    title = \"How Creepy is your Job?\",\n    subtitle = \"The <strong><span style = 'color:maroon;'>creepiest</span></strong> occupations replicate findings from McAndrew and Koehnke (2017)<br>\"\n  ) +\n  coord_cartesian(xlim=c(1,5)) +\n  scale_fill_identity() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\",\n                              size = 20),\n    plot.subtitle = element_markdown()\n  )\n```\n\n```{r}\nocc |> \n  group_by(jobs) |> \n  summarize(\n    Mean = mean(score),\n    SD = sd(score)\n  ) |> \n  arrange(desc(Mean)) |> \n  rename(Occupation = jobs) |> \n  hux() |> \n  theme_article()\n```\n\n## Emotional Perception\n\nParticipants were shown two faces from the MSFDE database that either displayed Anger or Disgust. They were then asked to choose the emotion that expresses how they feel toward a supposed Creepy person.\n\n```{r}\n# 1 = Anger | 2 = Disgust\ncr_emot <- \n  cr_cln |> \n  select(Emotion) |> \n  remove_labels() |> \n  mutate(\n    category = ifelse(Emotion == \"1\", \"Anger\",\"Disgust\")\n  )\n\n# Chi Square Test Shows More Endorsement for Disgust\ntable(cr_emot$category) |> \n  chisq.test() |> \n  tidy() |> \n  rename(\n    chi = statistic,\n    df = parameter,\n    p = p.value\n  ) |> \n  select(-method) |> \n  select(chi,df,p) |> \n  hux() |> \n  theme_article()\n```\n\n### Emotion Visualized\n\n```{r}\ncr_emot |> \n  group_by(category) |> \n  count() |> \n  ggplot(aes(category,n,fill = category, label = n)) + \n  geom_bar(stat = \"identity\",\n           width = .40) +\n  theme_minimal() +\n  geom_label(size = 9,\n             colour = \"white\") +\n  labs(\n    x = \"\\nEmotion Category\",\n    y = \"\"\n  ) +\n  ylim(0,100)+\n  theme(\n    legend.position = \"none\"\n  ) +\n  scale_fill_manual(values = c(\"darkgreen\",\"maroon\"))\n```\n\n## Moral Perception\n\nParticipants were shown three questions relating to character judgments of a supposed Creepy individual. The three questions were averaged to create a composite score of moral character, with higher values suggesting bad moral character.\n\n```{r}\nmc <- \n  cr_cln |> \n  remove_labels()\n\n# One Sample T-Test showing Creepy People are thought to possess 'bad' moral character\nmc |> \n  rowwise() |> \n  select(bad_or_good:trustworthy_r) |> \n  mutate(\n    character = mean(c_across(bad_or_good:trustworthy_r))\n  ) |> \n  select(character) |> \n  ungroup() |> \n  t.test(mu = 4) |> \n  tidy() |> \n  rename(\n    Mean = estimate,\n    t = statistic, \n    p = p.value,\n    df = parameter\n  ) |> \n  mutate(\n    `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\")\n  ) |> \n  select(-conf.low,-conf.high,-method,-alternative) |> \n  relocate(p, .after = last_col()) |> \n  hux() |> \n  theme_article() |> \n  set_align(\"center\")\n```\n\n## Face Ratings\n\n```{r}\npics <- \n  cr_cln |> \n  select(matches(\"M\\\\d+_\\\\d\")) |> \n  pivot_longer(\n    cols = matches(\"M\\\\d+_\\\\d\"),\n    values_to = \"ratings\"\n  ) |> \n  mutate(\n    attribute = \n      case_when(\n        str_detect(name,\"M\\\\d+_1\") ~ \"Attractiveness\",\n        str_detect(name,\"M\\\\d+_2\") ~ \"Trustworthiness\",\n        str_detect(name,\"M\\\\d+_3\") ~ \"Dominance\",\n        str_detect(name,\"M\\\\d+_4\") ~ \"Creepiness\"\n    )\n  ) \n\n# Pictures Ranked by Average Rating\npics_avg <- \n  pics |> \n  group_by(name,attribute) |> \n  summarize(\n    Mean = mean(ratings,na.rm = TRUE),\n    SD = sd(ratings,na.rm = TRUE)\n  ) |> \n  arrange(Mean)\n\n# Correlations\n# Attractiveness\nat <- \n  pics_avg |> \n  filter(attribute == \"Attractiveness\")\n# Trustworthiness\ntr <- \n  pics_avg |> \n  filter(attribute == \"Trustworthiness\")\n# Creepiness\ncrp <- \n  pics_avg |> \n  filter(attribute == \"Creepiness\")\n\n# Attractive x Trustworthiness\ncor.test(at$Mean,tr$Mean) |> \n  tidy() |> \n  rename(\n    r = estimate, \n    t = statistic,\n    p = p.value, \n    df = parameter) |> \n    mutate(\n      `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\"))\n  hux() |> \n  theme_article()\n\ncor.test(tr$Mean,crp$Mean) |> \n    tidy() |> \n    rename(\n    r = estimate, \n    t = statistic,\n    p = p.value, \n    df = parameter) |> \n    mutate(\n      `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\"))\n  hux() |> \n  theme_article()\n\ncor.test(at$Mean,crp$Mean) |> \n    tidy() |> \n    rename(\n    r = estimate, \n    t = statistic,\n    p = p.value, \n    df = parameter) |> \n    mutate(\n      `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\"))\n  hux() |> \n  theme_article()\n\n\n\n```\n\n## Qualitative Analyses\n\n### Creepiness Scenario\n\n```{r}\nscen <- \n  cr_cln |> \n  select(Creepiness_Scenario) |> \n  filter(!str_detect(Creepiness_Scenario,\"test|TEST\")) |> \n  separate_longer_delim(\n    cols = Creepiness_Scenario,delim = c(\",\")) |> \n  separate_longer_delim(\n    cols = Creepiness_Scenario,delim = c(\"and\")) |> \n  separate_longer_delim(\n    cols = Creepiness_Scenario,delim = c(\";\")) |> \n  mutate(\n    Creepiness_Scenario = str_trim(Creepiness_Scenario,\"left\"),\n    Creepiness_Scenario = str_to_lower(Creepiness_Scenario),\n    length = str_length(Creepiness_Scenario),\n    speaker = row_number()\n  ) |> \n  filter(str_detect(Creepiness_Scenario,\"^\\\\b\")) |> \n  filter(length > 10) |> \n  slice_sample(n = 20)\n\n\ngvisWordTree(\n    scen,\n    chartid = \"scenario\",\n    textvar = \"Creepiness_Scenario\",\n    options=list(width=2000, \n                 height=1000)) |> \n  plot(tag = NULL)\n```\n\n### Creepy Hobbies\n\n```{r}\nhob <- \n  cr_cln |> \n  select(Creepy_Hobby) |> \n  # Remove single answer and placeholder text\n  filter(!str_detect(Creepy_Hobby,\"^h|(s){3}\\\\1\")) |> \n  # Separate by (, and or)\n  separate_longer_delim(\n    cols = Creepy_Hobby,delim = c(\",\")) |> \n  separate_longer_delim(\n    cols = Creepy_Hobby,delim = c(\"and\")) |> \n  mutate(\n    Creepy_Hobby = str_trim(Creepy_Hobby,\"left\"),\n    Creepy_Hobby = str_to_lower(Creepy_Hobby)\n  )\n\ncreep_gv <- \n  gvisWordTree(data = hob, \n             textvar = \"Creepy_Hobby\",\n             chartid = \"hobby\",\n             options=list(width=2000, \n                 height=1000)) \n\n```\n\n```{=html}\n`r creep_gv |> print()`\n```\n","srcMarkdownNoYaml":"\n\n# Hypotheses\n\n# Stimuli\n\n## Data Processing\n\n```{r}\n#| message: false\n#| warning: false\n# Load in packages\nlibrary(haven) # Import SPSS\nlibrary(dplyr) # Wrangling Data\nlibrary(tibble) # Nicer Printing\nlibrary(tidyr)  #  Manipulate Data\nlibrary(ggplot2) # Plotting Data\nlibrary(purrr) # Dealing with lists\nlibrary(labelled) #  For dealing with labels\nlibrary(forcats) # for handling categories\nlibrary(huxtable)  # For making nice tables\nlibrary(afex) # for nice ANOVAS\nlibrary(broom) # Cleaning up stats\nlibrary(stringr) # Text Manipulation\nlibrary(janitor) # Cleaning up names\nlibrary(tidytext) # Word Count\nlibrary(patchwork) # Combining Graphs\nlibrary(readxl) # Read in excel\nlibrary(ggtext) # Add text elements to plots\nsuppressPackageStartupMessages(library(googleVis))\n\n# Custom Functions \ndiscrete_tab <- function(data,x){\n  name <- \n    data |> \n    select({{x}}) |> \n    pull()\n\n  tab <- \n    name |> \n    tabyl() |> \n    select(-(starts_with(\"val\"))) |> \n    # Ignore Error for Now,,,\n    adorn_pct_formatting(,,,percent) |> \n    rename_with(str_to_sentence) |> \n    hux() |> \n    theme_article() |> \n    set_align(everywhere,everywhere,\".\")\n  \n  tab[1,] <- c(str_to_sentence(x),\"\",\"\")\n  \n  tab\n}\n\n\nclean_up <- function(string) {\n  string <- str_trim(string)\n  string <- str_remove_all(string, \"[[:punct:]]\")\n}\n\n\n# Read Data\ncr <- read_spss(\"Perceptions+of+Creepiness_February+19%2C+2024_16.43.sav\")\n\n# Clean Data\ncr_cln <- \n  cr |> \n  # Only look at complete cases\n  filter(Finished == 1) |> \n  # Only use 18+ cases\n  filter(Age > 1) |> \n  # Remove uneeded columns \n  select(!StartDate:RecordedDate) |> \n  select(!DistributionChannel:UserLanguage) |> \n  select(!id:Ethnicity_Race_6_TEXT___Topics) |> \n  rename(\n    Creepy_Occ_8 = Occ_8)\n```\n\n### Demographics\n\n```{r}\n# Subset Demographic data\ndemo <- \n  cr_cln |> \n  select(Gender,Religion,Ethnicity_Race,Age) |> \n  mutate(\n    # Get Labels of Demographic variables\n    Gender = sjlabelled::get_labels(cr_cln$Gender)[cr_cln$Gender],\n    Religion = sjlabelled::get_labels(cr_cln$Religion)[cr_cln$Religion],\n    Ethnicity_Race = sjlabelled::get_labels(cr_cln$Ethnicity_Race)[cr_cln$Ethnicity_Race],\n    Age = sjlabelled::get_labels(cr_cln$Age)[cr_cln$Age])\n\n# Apply Custom Function\ngen <- discrete_tab(demo,\"Gender\")\n\neth <- discrete_tab(demo,\"Ethnicity_Race\")\n\nrel <- discrete_tab(demo,\"Religion\")\n\nage <- discrete_tab(demo,\"Age\")\n\ngen |> \n  add_rows(eth) |> \n  add_rows(rel) |> \n  add_rows(age) |> \n  # Add Header Row\n  insert_row(\"Variable\",\"N\",\"Percent\") |> \n  set_top_border(row = 1:3,1:3) |> \n  set_align(col = 1, value = \"left\") |>  \n  set_align(1,1,\"center\") |> \n  set_bottom_border(row = nrow(all), col = ncol(all), value = .4) \n```\n\n### Creepy Occupations\n\nParticipants were asked to rate 21 occupations on a scale from 1 (*Not Creepy at all*) to 5 (*Very Creepy*)\n\n```{r}\n# Get Occupation Labels\nocc_lab <- \n  cr_cln |> \n  select(contains(\"Occ\")) \n\nocc_val <- map_df(occ_lab,get_label_attribute)\n\n# Isolated Occupations\nocc <- \n  occ_val |> \n  pivot_longer(cols=Creepy_Occ_2:Creepy_Occ_22,\n               names_to = \"occ\") |> \n  select(value)\n\n# Occupation Analysis\nocc <- \n  cr_cln |> \n  rename_at(vars(contains(\"occ\")), ~ occ$value) |>\n  pivot_longer(cols = Clown:Meterologist,\n               names_to = \"jobs\",\n               values_to = \"score\") |> \n  mutate(jobs = as.factor(jobs),\n         color = ifelse(jobs %in% c(\"Funeral Director\",\n                                    \"Sex Shop Owner\",\n                                    \"Taxidermist\",\n                                    \"Clown\"),\"maroon\",\"grey\")) \n\n# Visualize\nocc |> \n  ggplot(aes(score,fct_inorder(jobs))) +\n  stat_summary(\n    fun = \"mean\",\n    geom = \"bar\",\n    aes(fill = color)\n  ) +\n  stat_summary(\n    fun.data = \"mean_se\",\n    geom = \"errorbar\"\n  ) +\n  theme_minimal() +\n  labs(\n    x = \"\\n\",\n    y = \"\\n\",\n    title = \"How Creepy is your Job?\",\n    subtitle = \"The <strong><span style = 'color:maroon;'>creepiest</span></strong> occupations replicate findings from McAndrew and Koehnke (2017)<br>\"\n  ) +\n  coord_cartesian(xlim=c(1,5)) +\n  scale_fill_identity() +\n  theme(\n    plot.title.position = \"plot\",\n    plot.title = element_text(face = \"bold\",\n                              size = 20),\n    plot.subtitle = element_markdown()\n  )\n```\n\n```{r}\nocc |> \n  group_by(jobs) |> \n  summarize(\n    Mean = mean(score),\n    SD = sd(score)\n  ) |> \n  arrange(desc(Mean)) |> \n  rename(Occupation = jobs) |> \n  hux() |> \n  theme_article()\n```\n\n## Emotional Perception\n\nParticipants were shown two faces from the MSFDE database that either displayed Anger or Disgust. They were then asked to choose the emotion that expresses how they feel toward a supposed Creepy person.\n\n```{r}\n# 1 = Anger | 2 = Disgust\ncr_emot <- \n  cr_cln |> \n  select(Emotion) |> \n  remove_labels() |> \n  mutate(\n    category = ifelse(Emotion == \"1\", \"Anger\",\"Disgust\")\n  )\n\n# Chi Square Test Shows More Endorsement for Disgust\ntable(cr_emot$category) |> \n  chisq.test() |> \n  tidy() |> \n  rename(\n    chi = statistic,\n    df = parameter,\n    p = p.value\n  ) |> \n  select(-method) |> \n  select(chi,df,p) |> \n  hux() |> \n  theme_article()\n```\n\n### Emotion Visualized\n\n```{r}\ncr_emot |> \n  group_by(category) |> \n  count() |> \n  ggplot(aes(category,n,fill = category, label = n)) + \n  geom_bar(stat = \"identity\",\n           width = .40) +\n  theme_minimal() +\n  geom_label(size = 9,\n             colour = \"white\") +\n  labs(\n    x = \"\\nEmotion Category\",\n    y = \"\"\n  ) +\n  ylim(0,100)+\n  theme(\n    legend.position = \"none\"\n  ) +\n  scale_fill_manual(values = c(\"darkgreen\",\"maroon\"))\n```\n\n## Moral Perception\n\nParticipants were shown three questions relating to character judgments of a supposed Creepy individual. The three questions were averaged to create a composite score of moral character, with higher values suggesting bad moral character.\n\n```{r}\nmc <- \n  cr_cln |> \n  remove_labels()\n\n# One Sample T-Test showing Creepy People are thought to possess 'bad' moral character\nmc |> \n  rowwise() |> \n  select(bad_or_good:trustworthy_r) |> \n  mutate(\n    character = mean(c_across(bad_or_good:trustworthy_r))\n  ) |> \n  select(character) |> \n  ungroup() |> \n  t.test(mu = 4) |> \n  tidy() |> \n  rename(\n    Mean = estimate,\n    t = statistic, \n    p = p.value,\n    df = parameter\n  ) |> \n  mutate(\n    `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\")\n  ) |> \n  select(-conf.low,-conf.high,-method,-alternative) |> \n  relocate(p, .after = last_col()) |> \n  hux() |> \n  theme_article() |> \n  set_align(\"center\")\n```\n\n## Face Ratings\n\n```{r}\npics <- \n  cr_cln |> \n  select(matches(\"M\\\\d+_\\\\d\")) |> \n  pivot_longer(\n    cols = matches(\"M\\\\d+_\\\\d\"),\n    values_to = \"ratings\"\n  ) |> \n  mutate(\n    attribute = \n      case_when(\n        str_detect(name,\"M\\\\d+_1\") ~ \"Attractiveness\",\n        str_detect(name,\"M\\\\d+_2\") ~ \"Trustworthiness\",\n        str_detect(name,\"M\\\\d+_3\") ~ \"Dominance\",\n        str_detect(name,\"M\\\\d+_4\") ~ \"Creepiness\"\n    )\n  ) \n\n# Pictures Ranked by Average Rating\npics_avg <- \n  pics |> \n  group_by(name,attribute) |> \n  summarize(\n    Mean = mean(ratings,na.rm = TRUE),\n    SD = sd(ratings,na.rm = TRUE)\n  ) |> \n  arrange(Mean)\n\n# Correlations\n# Attractiveness\nat <- \n  pics_avg |> \n  filter(attribute == \"Attractiveness\")\n# Trustworthiness\ntr <- \n  pics_avg |> \n  filter(attribute == \"Trustworthiness\")\n# Creepiness\ncrp <- \n  pics_avg |> \n  filter(attribute == \"Creepiness\")\n\n# Attractive x Trustworthiness\ncor.test(at$Mean,tr$Mean) |> \n  tidy() |> \n  rename(\n    r = estimate, \n    t = statistic,\n    p = p.value, \n    df = parameter) |> \n    mutate(\n      `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\"))\n  hux() |> \n  theme_article()\n\ncor.test(tr$Mean,crp$Mean) |> \n    tidy() |> \n    rename(\n    r = estimate, \n    t = statistic,\n    p = p.value, \n    df = parameter) |> \n    mutate(\n      `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\"))\n  hux() |> \n  theme_article()\n\ncor.test(at$Mean,crp$Mean) |> \n    tidy() |> \n    rename(\n    r = estimate, \n    t = statistic,\n    p = p.value, \n    df = parameter) |> \n    mutate(\n      `CI[ll,uu]` = paste0(\"[\",\n                         conf.low |> round(0),\n                         \",\",conf.high |> round(0),\n                         \"]\"))\n  hux() |> \n  theme_article()\n\n\n\n```\n\n## Qualitative Analyses\n\n### Creepiness Scenario\n\n```{r}\nscen <- \n  cr_cln |> \n  select(Creepiness_Scenario) |> \n  filter(!str_detect(Creepiness_Scenario,\"test|TEST\")) |> \n  separate_longer_delim(\n    cols = Creepiness_Scenario,delim = c(\",\")) |> \n  separate_longer_delim(\n    cols = Creepiness_Scenario,delim = c(\"and\")) |> \n  separate_longer_delim(\n    cols = Creepiness_Scenario,delim = c(\";\")) |> \n  mutate(\n    Creepiness_Scenario = str_trim(Creepiness_Scenario,\"left\"),\n    Creepiness_Scenario = str_to_lower(Creepiness_Scenario),\n    length = str_length(Creepiness_Scenario),\n    speaker = row_number()\n  ) |> \n  filter(str_detect(Creepiness_Scenario,\"^\\\\b\")) |> \n  filter(length > 10) |> \n  slice_sample(n = 20)\n\n\ngvisWordTree(\n    scen,\n    chartid = \"scenario\",\n    textvar = \"Creepiness_Scenario\",\n    options=list(width=2000, \n                 height=1000)) |> \n  plot(tag = NULL)\n```\n\n### Creepy Hobbies\n\n```{r}\nhob <- \n  cr_cln |> \n  select(Creepy_Hobby) |> \n  # Remove single answer and placeholder text\n  filter(!str_detect(Creepy_Hobby,\"^h|(s){3}\\\\1\")) |> \n  # Separate by (, and or)\n  separate_longer_delim(\n    cols = Creepy_Hobby,delim = c(\",\")) |> \n  separate_longer_delim(\n    cols = Creepy_Hobby,delim = c(\"and\")) |> \n  mutate(\n    Creepy_Hobby = str_trim(Creepy_Hobby,\"left\"),\n    Creepy_Hobby = str_to_lower(Creepy_Hobby)\n  )\n\ncreep_gv <- \n  gvisWordTree(data = hob, \n             textvar = \"Creepy_Hobby\",\n             chartid = \"hobby\",\n             options=list(width=2000, \n                 height=1000)) \n\n```\n\n```{=html}\n`r creep_gv |> print()`\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":3,"output-file":"creepy.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.550","editor":"visual","theme":{"light":"flatly","dark":"darkly"},"toc-location":"left","title":"Perceptions of Creepiness","author":"Terri Payne, Joe DeVita & David Brocker","lightbox":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}